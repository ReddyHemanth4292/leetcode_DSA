class Solution {
    public ListNode reverse(ListNode head){
        ListNode prev=null;
        ListNode current=head;
        ListNode next=null;
        while(current!=null){
            next=current.next;
            current.next=prev;
            prev=current;
            current=next;
        }
        return prev;

    }
    public boolean isPalindrome(ListNode head) {
        if(head==null && head.next==null) return true;
        ListNode fast=head;
        ListNode slow=head;
        ListNode start=head;
        while(fast.next!=null && fast.next.next!=null){
            fast=fast.next.next;
            slow=slow.next;
        }
        slow.next=reverse(slow.next);
        slow=slow.next;
        while(slow!=null){
            if(start.val!=slow.val){
                System.out.println(start.val+" "+slow.val); 
                return false;
            }
            slow=slow.next;
            start=start.next;
        }
        return true;
    }
}
